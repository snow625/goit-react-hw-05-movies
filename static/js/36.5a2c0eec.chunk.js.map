{"version":3,"file":"static/js/36.5a2c0eec.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/components/MovieList/movieList.module.css?ccba","components/MovieList/MovieList.jsx","webpack://goit-react-hw-05-movies/./src/components/SearchForm/searchForm.module.css?a515","components/SearchForm/SearchForm.jsx","webpack://goit-react-hw-05-movies/./src/modules/SearchMovies/searchMovies.module.css?c4af","modules/SearchMovies/SearchMovies.jsx","pages/MoviesPage/MoviesPage.jsx","shared/serveces/themoviedb.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"movieList_list__jMPnn\",\"item\":\"movieList_item__reVHG\",\"poster\":\"movieList_poster__-RYn6\",\"title\":\"movieList_title__S13wJ\",\"link\":\"movieList_link__OAcXq\"};","import { Link, useLocation } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nimport s from \"./movieList.module.css\";\r\n\r\nconst MovieList = ({ items }) => {\r\n  const from = useLocation();\r\n  const elements = items.map((el) => {\r\n    const { id, title, poster_path } = el;\r\n    return (\r\n      <li className={s.item} key={id}>\r\n        <Link to={`/movies/${id}`} state={{ from }} className={s.link}>\r\n          <img\r\n            className={s.poster}\r\n            src={`https://image.tmdb.org/t/p/w600_and_h900_bestv2${poster_path}`}\r\n            alt=\"title\"\r\n            width=\"250\"\r\n            height=\"370\"\r\n          />\r\n          <h3 className={s.title}>{title}</h3>\r\n        </Link>\r\n      </li>\r\n    );\r\n  });\r\n\r\n  return <ul className={s.list}>{elements}</ul>;\r\n};\r\n\r\nMovieList.defaultProps = {\r\n  items: [],\r\n};\r\n\r\nMovieList.propTypes = {\r\n  items: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n      title: PropTypes.string.isRequired,\r\n      poster_path: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n};\r\n\r\nexport default MovieList;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"searchForm_form__3KFUS\",\"input\":\"searchForm_input__dr-vB\",\"button\":\"searchForm_button__Xkk20\",\"icon\":\"searchForm_icon__+wzVK\"};","import { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport s from \"./searchForm.module.css\";\r\nimport sprite from \"../../images/svg/sprite.svg\";\r\n\r\nconst SearchForm = ({ onSubmit }) => {\r\n  const [state, setState] = useState({ search: \"\" });\r\n\r\n  const handleChange = ({ target }) => {\r\n    const { value, name } = target;\r\n    setState((prevState) => {\r\n      return { ...prevState, [name]: value };\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    onSubmit(state.search.trim());\r\n    setState({ search: \"\" });\r\n  };\r\n\r\n  const { search } = state;\r\n  return (\r\n    <form className={s.form} onSubmit={handleSubmit}>\r\n      <input\r\n        onChange={handleChange}\r\n        className={s.input}\r\n        type=\"text\"\r\n        name=\"search\"\r\n        value={search}\r\n        placeholder=\"movie name...\"\r\n        required\r\n      />\r\n      <button className={s.button} type=\"sumbit\" aria-label=\"button-search\">\r\n        <svg className={s.icon}>\r\n          <use href={sprite + \"#icon-search\"} />\r\n        </svg>\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\nSearchForm.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default SearchForm;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"error\":\"searchMovies_error__fVF5y\"};","import { useSearchParams } from \"react-router-dom\";\r\nimport { useState, useEffect } from \"react\";\r\nimport SearchForm from \"../../components/SearchForm\";\r\nimport { getMovieByQwery } from \"../../shared/serveces/themoviedb\";\r\nimport MovieList from \"../../components/MovieList\";\r\n\r\nimport s from \"./searchMovies.module.css\";\r\n\r\nconst SearchMovies = () => {\r\n  const [state, setState] = useState({\r\n    items: [],\r\n    error: null,\r\n    loading: false,\r\n  });\r\n\r\n  const [searchParams, setSearchParams] = useSearchParams();\r\n  const fetchFilms = (qwery) => setSearchParams({ qwery });\r\n\r\n  let searchFilmName = searchParams.get(\"qwery\");\r\n\r\n  useEffect(() => {\r\n    const fetchMoviesByQwery = async () => {\r\n      setState((prevState) => {\r\n        return { ...prevState, loading: true, error: false };\r\n      });\r\n      try {\r\n        const data = await getMovieByQwery(searchFilmName);\r\n        setState((prevState) => {\r\n          return { ...prevState, loading: false, items: data.results };\r\n        });\r\n      } catch (error) {\r\n        setState((prevState) => {\r\n          return { ...prevState, loading: false, error };\r\n        });\r\n      }\r\n    };\r\n    if (searchFilmName) {\r\n      fetchMoviesByQwery();\r\n    }\r\n  }, [searchFilmName]);\r\n  const { items, error, loading } = state;\r\n  return (\r\n    <>\r\n      <SearchForm onSubmit={fetchFilms} />\r\n      {error && (\r\n        <p className={s.error}>We are sorry, a server error occurred</p>\r\n      )}\r\n      {loading && <p className={s.error}>loading...</p>}\r\n      {items.length > 0 && <MovieList items={items} />}\r\n    </>\r\n  );\r\n};\r\nexport default SearchMovies;\r\n","\r\nimport SearchMovies from \"../../modules/SearchMovies\";\r\n\r\nconst MoviesPage = () => {\r\n  \r\n  return <SearchMovies />;\r\n};\r\n\r\nexport default MoviesPage;\r\n","import axios from \"axios\";\r\nconst instance = axios.create({\r\n  baseURL: \"https://api.themoviedb.org/3/\",\r\n});\r\nconst APIkey = \"1cfe036866fd8b692888cb79d359ab5e\";\r\n\r\nexport const getTrendingMovies = async (page = 1) => {\r\n  const {\r\n    data: { results },\r\n  } = await instance.get(\"trending/movie/day\", {\r\n    params: {\r\n      api_key: APIkey,\r\n      page,\r\n    },\r\n  });\r\n  return results;\r\n};\r\n\r\nexport const getMovieByQwery = async (query, page = 1) => {\r\n  const { data } = await instance.get(\"search/movie\", {\r\n    params: {\r\n      api_key: APIkey,\r\n      page,\r\n      query,\r\n    },\r\n  });\r\n  return data;\r\n};\r\n\r\nexport const getMovieById = async (id) => {\r\n  const { data } = await instance.get(`movie/${id}`, {\r\n    params: {\r\n      api_key: APIkey,\r\n    },\r\n  });\r\n  return data;\r\n};\r\n\r\nexport const getMovieCreditsById = async (id) => {\r\n  const { data } = await instance.get(`movie/${id}/credits`, {\r\n    params: {\r\n      api_key: APIkey,\r\n    },\r\n  });\r\n  return data;\r\n};\r\n\r\nexport const getMovieReviewsById = async (id) => {\r\n  const { data } = await instance.get(`movie/${id}/reviews`, {\r\n    params: {\r\n      api_key: APIkey,\r\n    },\r\n  });\r\n  return data;\r\n};\r\n"],"names":["MovieList","items","from","useLocation","elements","map","el","id","title","poster_path","className","s","to","state","src","alt","width","height","defaultProps","onSubmit","useState","search","setState","e","preventDefault","trim","onChange","target","value","name","prevState","type","placeholder","required","href","sprite","error","loading","useSearchParams","searchParams","setSearchParams","searchFilmName","get","useEffect","fetchMoviesByQwery","getMovieByQwery","data","results","qwery","length","instance","axios","baseURL","APIkey","getTrendingMovies","page","params","api_key","query","getMovieById","getMovieCreditsById","getMovieReviewsById"],"sourceRoot":""}