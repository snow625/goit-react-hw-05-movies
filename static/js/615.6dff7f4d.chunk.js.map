{"version":3,"file":"static/js/615.6dff7f4d.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/components/MovieCard/movieCard.module.css?76be","components/MovieCard/MovisCard.jsx","webpack://goit-react-hw-05-movies/./src/pages/SingleMoviePage/singlePage.module.css?c434","pages/SingleMoviePage/SingleMoviePage.jsx","shared/serveces/themoviedb.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"movieCard_wrapper__t3qay\",\"poster\":\"movieCard_poster__WP1ri\",\"wraperDescripton\":\"movieCard_wraperDescripton__MkSqg\",\"title\":\"movieCard_title__n-l3c\",\"userScore\":\"movieCard_userScore__89n0w\",\"Overviev\":\"movieCard_Overviev__abEeh\",\"OvervievText\":\"movieCard_OvervievText__XzEwl\"};","import PropTypes from \"prop-types\";\r\nimport s from \"./movieCard.module.css\";\r\nconst MovieCard = ({ item }) => {\r\n  const {\r\n    title,\r\n    poster_path,\r\n    genres: genresArr,\r\n    release_date,\r\n    vote_average,\r\n    overview,\r\n  } = item;\r\n  const poster = `https://image.tmdb.org/t/p/w600_and_h900_bestv2${poster_path}`;\r\n  const date = release_date.slice(0, 4);\r\n  const userScore = vote_average * 10;\r\n  const genres =\r\n    genresArr.length > 0\r\n      ? genresArr.map(({ name }) => name).join(\", \")\r\n      : \"no Ganres\";\r\n  const description = overview ? overview : \"no overview \";\r\n\r\n  return (\r\n    <div className={s.wrapper}>\r\n      <img\r\n        className={s.poster}\r\n        src={poster}\r\n        alt={title}\r\n        width=\"360\"\r\n        height=\"540\"\r\n      />\r\n      <div className={s.wraperDescripton}>\r\n        <p className={s.title}>{`${title} (${date})`}</p>\r\n        <p className={s.userScore}>{`User Score: ${userScore}%`}</p>\r\n        <p className={s.Overviev}>Overviev</p>\r\n        <p className={s.OvervievText}>{description}</p>\r\n        <p className={s.Overviev}>Genres</p>\r\n        <p className={s.OvervievText}>{genres}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nMovieCard.defaultProps = {\r\n  item: { genres: [{ name: \"\" }] },\r\n};\r\n\r\nMovieCard.propTypes = {\r\n  item: PropTypes.shape({\r\n    title: PropTypes.string.isRequired,\r\n    poster_path: PropTypes.string.isRequired,\r\n    genres: PropTypes.arrayOf(\r\n      PropTypes.shape({\r\n        name: PropTypes.string.isRequired,\r\n      })\r\n    ),\r\n    release_date: PropTypes.string.isRequired,\r\n    vote_average: PropTypes.number.isRequired,\r\n    overview: PropTypes.string.isRequired,\r\n  }),\r\n};\r\n\r\nexport default MovieCard;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"singlePage_wrapper__zs5XB\",\"error\":\"singlePage_error__dnVG-\",\"linkWrapper\":\"singlePage_linkWrapper__pcb66\",\"link\":\"singlePage_link__d35l2\",\"activeLink\":\"singlePage_activeLink__PjoN6\",\"btnBack\":\"singlePage_btnBack__WqnLV\"};","import {\r\n  useParams,\r\n  useNavigate,\r\n  useLocation,\r\n  Outlet,\r\n  NavLink,\r\n} from \"react-router-dom\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nimport MovieCard from \"../../components/MovieCard/MovisCard\";\r\n\r\nimport { getMovieById } from \"../../shared/serveces/themoviedb\";\r\n\r\nimport s from \"./singlePage.module.css\";\r\n\r\nconst SingleMoviePage = () => {\r\n  const { id: StrId } = useParams();\r\n  const id = Number(StrId);\r\n\r\n  const [state, setState] = useState({\r\n    item: {},\r\n    error: null,\r\n    loading: false,\r\n  });\r\n\r\n  useEffect(() => {\r\n    const fetchMovie = async () => {\r\n      setState((prevState) => {\r\n        return { ...prevState, loading: true, error: false };\r\n      });\r\n      try {\r\n        const data = await getMovieById(id);\r\n\r\n        setState((prevState) => {\r\n          return { ...prevState, loading: false, item: { ...data } };\r\n        });\r\n      } catch (error) {\r\n        setState((prevState) => {\r\n          return { ...prevState, loading: false, error };\r\n        });\r\n      }\r\n    };\r\n    if (id) {\r\n      fetchMovie();\r\n    }\r\n  }, [id]);\r\n\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  const prevPageLocation = location.state?.from || \"/\";\r\n\r\n  const goBack = () => navigate(prevPageLocation);\r\n\r\n  const { item, error, loading } = state;\r\n\r\n  return (\r\n    <div className={s.wrapper}>\r\n      <button className={s.btnBack} type=\"button\" onClick={goBack}>\r\n        Back\r\n      </button>\r\n      {error && (\r\n        <p className={s.error}>We are sorry, a server error occurred</p>\r\n      )}\r\n      {loading && <p className={s.error}>loading...</p>}\r\n      {item?.id && <MovieCard item={item} />}\r\n      <div className={s.linkWrapper}>\r\n        <NavLink\r\n          className={({ isActive }) =>\r\n            isActive ? `${s.activeLink}` : `${s.link}`\r\n          }\r\n          to={`/movies/${id}/reviews`}\r\n        >\r\n          Reviews\r\n        </NavLink>\r\n        <NavLink\r\n          className={({ isActive }) =>\r\n            isActive ? `${s.activeLink}` : `${s.link}`\r\n          }\r\n          to={`/movies/${id}/cast`}\r\n        >\r\n          Cast\r\n        </NavLink>\r\n      </div>\r\n      <Outlet />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SingleMoviePage;\r\n","import axios from \"axios\";\r\nconst instance = axios.create({\r\n  baseURL: \"https://api.themoviedb.org/3/\",\r\n});\r\nconst APIkey = \"1cfe036866fd8b692888cb79d359ab5e\";\r\n\r\nexport const getTrendingMovies = async (page = 1) => {\r\n  const {\r\n    data: { results },\r\n  } = await instance.get(\"trending/movie/day\", {\r\n    params: {\r\n      api_key: APIkey,\r\n      page,\r\n    },\r\n  });\r\n  return results;\r\n};\r\n\r\nexport const getMovieByQwery = async (query, page = 1) => {\r\n  const { data } = await instance.get(\"search/movie\", {\r\n    params: {\r\n      api_key: APIkey,\r\n      page,\r\n      query,\r\n    },\r\n  });\r\n  return data;\r\n};\r\n\r\nexport const getMovieById = async (id) => {\r\n  const { data } = await instance.get(`movie/${id}`, {\r\n    params: {\r\n      api_key: APIkey,\r\n    },\r\n  });\r\n  return data;\r\n};\r\n\r\nexport const getMovieCreditsById = async (id) => {\r\n  const { data } = await instance.get(`movie/${id}/credits`, {\r\n    params: {\r\n      api_key: APIkey,\r\n    },\r\n  });\r\n  return data;\r\n};\r\n\r\nexport const getMovieReviewsById = async (id) => {\r\n  const { data } = await instance.get(`movie/${id}/reviews`, {\r\n    params: {\r\n      api_key: APIkey,\r\n    },\r\n  });\r\n  return data;\r\n};\r\n"],"names":["MovieCard","item","title","poster_path","genresArr","genres","release_date","vote_average","overview","poster","date","slice","userScore","length","map","name","join","description","className","s","src","alt","width","height","defaultProps","StrId","useParams","id","Number","useState","error","loading","state","setState","useEffect","fetchMovie","prevState","getMovieById","data","navigate","useNavigate","prevPageLocation","useLocation","from","type","onClick","isActive","to","instance","axios","baseURL","APIkey","getTrendingMovies","page","get","params","api_key","results","getMovieByQwery","query","getMovieCreditsById","getMovieReviewsById"],"sourceRoot":""}