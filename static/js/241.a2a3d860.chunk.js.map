{"version":3,"file":"static/js/241.a2a3d860.chunk.js","mappings":"6PACA,GAAgB,MAAQ,yBAAyB,YAAc,+BAA+B,KAAO,wBAAwB,SAAW,4BAA4B,KAAO,yB,SCwE3K,EApEkB,WAChB,OAA0BA,EAAAA,EAAAA,UAAS,CACjCC,MAAO,GACPC,MAAO,KACPC,SAAS,IAHX,eAAOC,EAAP,KAAcC,EAAd,KAKYC,GAAUC,EAAAA,EAAAA,MAAdC,GACFA,EAAKC,OAAOH,IAElBI,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAc,yCAAG,oGACrBN,GAAS,SAACO,GACR,OAAO,kBAAKA,GAAZ,IAAuBT,SAAS,EAAMD,OAAO,OAF1B,mBAKIW,EAAAA,EAAAA,IAAoBL,GALxB,gBAKXM,EALW,EAKXA,KAEFC,EAAWD,EAAKE,OAAS,GAAKF,EAAKG,MAAM,EAAG,IAAMH,EAExDT,GAAS,SAACO,GACR,OAAO,kBAAKA,GAAZ,IAAuBT,SAAS,EAAOF,MAAOc,OAV7B,kDAanBV,GAAS,SAACO,GACR,OAAO,kBAAKA,GAAZ,IAAuBT,SAAS,EAAOD,MAAK,UAd3B,0DAAH,qDAkBhBM,GACFG,MAED,CAACH,IAEJ,IAAQP,EAA0BG,EAA1BH,MAAOC,EAAmBE,EAAnBF,MAAOC,EAAYC,EAAZD,QAEhBe,EAAWjB,EAAMkB,KAAI,SAACC,GAC1B,IAAQZ,EAAsCY,EAAtCZ,GAAIa,EAAkCD,EAAlCC,KAAMC,EAA4BF,EAA5BE,aAAcC,EAAcH,EAAdG,UAC1BC,EAAaF,GAEf,mCAEJ,OACE,gBAAaG,UAAWC,EAAAA,KAAxB,WACE,gBACED,UAAWC,EAAAA,KACXC,IAAG,yDAAoDH,GACvDI,IAAKP,EACLQ,MAAM,MACNC,OAAO,SAET,cAAGL,UAAWC,EAAAA,SAAd,SAA2BL,KAC3B,cAAGI,UAAWC,EAAAA,KAAd,SAAuBH,IAAe,MAT/Bf,MAcb,OACE,4BACE,iCACCN,IACC,cAAGuB,UAAWC,EAAAA,MAAd,mDAEDvB,IAAW,cAAGsB,UAAWC,EAAAA,MAAd,wBACXR,EAASF,OAAS,IAAK,eAAIS,UAAWC,EAAAA,KAAf,SAAwBR,S,wLCnEhDa,E,MAAWC,GAAAA,OAAa,CAC5BC,QAAS,kCAELC,EAAS,mCAEFC,EAAiB,yCAAG,gHAAOC,EAAP,+BAAc,EAAd,SAGrBL,EAASM,IAAI,qBAAsB,CAC3CC,OAAQ,CACNC,QAASL,EACTE,KAAAA,KAN2B,uBAErBI,EAFqB,EAE7BC,KAAQD,QAFqB,kBASxBA,GATwB,2CAAH,qDAYjBE,EAAe,yCAAG,WAAOC,GAAP,mGAAcP,EAAd,+BAAqB,EAArB,SACNL,EAASM,IAAI,eAAgB,CAClDC,OAAQ,CACNC,QAASL,EACTE,KAAAA,EACAO,MAAAA,KALyB,uBACrBF,EADqB,EACrBA,KADqB,kBAQtBA,GARsB,2CAAH,sDAWfG,EAAY,yCAAG,WAAOpC,GAAP,8FACHuB,EAASM,IAAT,gBAAsB7B,GAAM,CACjD8B,OAAQ,CACNC,QAASL,KAHa,uBAClBO,EADkB,EAClBA,KADkB,kBAMnBA,GANmB,2CAAH,sDASZ5B,EAAmB,yCAAG,WAAOL,GAAP,8FACVuB,EAASM,IAAT,gBAAsB7B,EAAtB,YAAoC,CACzD8B,OAAQ,CACNC,QAASL,KAHoB,uBACzBO,EADyB,EACzBA,KADyB,kBAM1BA,GAN0B,2CAAH,sDASnBI,EAAmB,yCAAG,WAAOrC,GAAP,8FACVuB,EAASM,IAAT,gBAAsB7B,EAAtB,YAAoC,CACzD8B,OAAQ,CACNC,QAASL,KAHoB,uBACzBO,EADyB,EACzBA,KADyB,kBAM1BA,GAN0B,2CAAH","sources":["webpack://goit-react-hw-05-movies/./src/pages/CastsPage/castsPage.module.css?a5d5","pages/CastsPage/CastsPage.jsx","shared/serveces/themoviedb.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"error\":\"castsPage_error__owzXG\",\"castWrapper\":\"castsPage_castWrapper__Rmyq8\",\"list\":\"castsPage_list__QAl9g\",\"nameReal\":\"castsPage_nameReal__85WJr\",\"item\":\"castsPage_item__D4Ghc\"};","import { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { getMovieCreditsById } from \"../../shared/serveces/themoviedb\";\r\n\r\nimport s from \"./castsPage.module.css\";\r\nconst CastsPage = () => {\r\n  const [state, setState] = useState({\r\n    items: [],\r\n    error: null,\r\n    loading: false,\r\n  });\r\n  const { id: StrId } = useParams();\r\n  const id = Number(StrId);\r\n\r\n  useEffect(() => {\r\n    const fetchCastsById = async () => {\r\n      setState((prevState) => {\r\n        return { ...prevState, loading: true, error: false };\r\n      });\r\n      try {\r\n        const { cast } = await getMovieCreditsById(id);\r\n\r\n        const dataCast = cast.length > 11 ? cast.slice(0, 10) : cast;\r\n\r\n        setState((prevState) => {\r\n          return { ...prevState, loading: false, items: dataCast };\r\n        });\r\n      } catch (error) {\r\n        setState((prevState) => {\r\n          return { ...prevState, loading: false, error };\r\n        });\r\n      }\r\n    };\r\n    if (id) {\r\n      fetchCastsById();\r\n    }\r\n  }, [id]);\r\n\r\n  const { items, error, loading } = state;\r\n\r\n  const elements = items.map((el) => {\r\n    const { id, name, profile_path, character } = el;\r\n    const profileImg = profile_path\r\n      ? profile_path\r\n      : \"/xcaHWHQZsqxFDig9Qw6CYRVXtW2.jpg\";\r\n\r\n    return (\r\n      <li key={id} className={s.item}>\r\n        <img\r\n          className={s.icon}\r\n          src={`https://image.tmdb.org/t/p/w600_and_h900_bestv2${profileImg}`}\r\n          alt={name}\r\n          width=\"100\"\r\n          height=\"150\"\r\n        />\r\n        <p className={s.nameReal}>{name}</p>\r\n        <p className={s.name}>{character}</p>{\" \"}\r\n      </li>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <h3>Cast</h3>\r\n      {error && (\r\n        <p className={s.error}>We are sorry, a server error occurred</p>\r\n      )}\r\n      {loading && <p className={s.error}>loading...</p>}\r\n      {elements.length > 0 && <ul className={s.list}>{elements}</ul>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CastsPage;\r\n","import axios from \"axios\";\r\nconst instance = axios.create({\r\n  baseURL: \"https://api.themoviedb.org/3/\",\r\n});\r\nconst APIkey = \"1cfe036866fd8b692888cb79d359ab5e\";\r\n\r\nexport const getTrendingMovies = async (page = 1) => {\r\n  const {\r\n    data: { results },\r\n  } = await instance.get(\"trending/movie/day\", {\r\n    params: {\r\n      api_key: APIkey,\r\n      page,\r\n    },\r\n  });\r\n  return results;\r\n};\r\n\r\nexport const getMovieByQwery = async (query, page = 1) => {\r\n  const { data } = await instance.get(\"search/movie\", {\r\n    params: {\r\n      api_key: APIkey,\r\n      page,\r\n      query,\r\n    },\r\n  });\r\n  return data;\r\n};\r\n\r\nexport const getMovieById = async (id) => {\r\n  const { data } = await instance.get(`movie/${id}`, {\r\n    params: {\r\n      api_key: APIkey,\r\n    },\r\n  });\r\n  return data;\r\n};\r\n\r\nexport const getMovieCreditsById = async (id) => {\r\n  const { data } = await instance.get(`movie/${id}/credits`, {\r\n    params: {\r\n      api_key: APIkey,\r\n    },\r\n  });\r\n  return data;\r\n};\r\n\r\nexport const getMovieReviewsById = async (id) => {\r\n  const { data } = await instance.get(`movie/${id}/reviews`, {\r\n    params: {\r\n      api_key: APIkey,\r\n    },\r\n  });\r\n  return data;\r\n};\r\n"],"names":["useState","items","error","loading","state","setState","StrId","useParams","id","Number","useEffect","fetchCastsById","prevState","getMovieCreditsById","cast","dataCast","length","slice","elements","map","el","name","profile_path","character","profileImg","className","s","src","alt","width","height","instance","axios","baseURL","APIkey","getTrendingMovies","page","get","params","api_key","results","data","getMovieByQwery","query","getMovieById","getMovieReviewsById"],"sourceRoot":""}