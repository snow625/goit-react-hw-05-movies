{"version":3,"file":"static/js/30.f3439b68.chunk.js","mappings":"4PACA,EAAwB,2BAAxB,EAAoE,oC,SC4DpE,EAvDoB,WAClB,OAA0BA,EAAAA,EAAAA,UAAS,CACjCC,MAAO,GACPC,MAAO,KACPC,SAAS,IAHX,eAAOC,EAAP,KAAcC,EAAd,KAMYC,GAAUC,EAAAA,EAAAA,MAAdC,GACFA,EAAKC,OAAOH,IAElBI,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAgB,yCAAG,gGACvBN,GAAS,SAACO,GACR,OAAO,kBAAKA,GAAZ,IAAuBT,SAAS,EAAMD,OAAO,OAFxB,mBAKFW,EAAAA,EAAAA,IAAoBL,GALlB,OAKfM,EALe,OAOrBT,GAAS,SAACO,GACR,OAAO,kBAAKA,GAAZ,IAAuBT,SAAS,EAAOF,MAAOa,EAAKC,aARhC,gDAWrBV,GAAS,SAACO,GACR,OAAO,kBAAKA,GAAZ,IAAuBT,SAAS,EAAOD,MAAK,UAZzB,yDAAH,qDAgBlBM,GACFG,MAED,CAACH,IAEJ,IAAQP,EAA0BG,EAA1BH,MAAOC,EAAmBE,EAAnBF,MAAOC,EAAYC,EAAZD,QAEhBa,EAAWf,EAAMgB,KAAI,YAA8B,IAA3BT,EAA0B,EAA1BA,GAAIU,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QACxC,OACE,2BACE,yCAAeD,EAAf,QACA,uBAAIC,MAFGX,MAOb,OACE,iBAAKY,UAAWC,EAAhB,WACE,oCACCnB,IACC,cAAGkB,UAAWC,EAAd,mDAEDlB,IAAW,cAAGiB,UAAWC,EAAd,wBACXL,EAASM,OAAS,GAAI,wBAAKN,KAAiB,iD,wLCvD7CO,E,MAAWC,GAAAA,OAAa,CAC5BC,QAAS,kCAELC,EAAS,mCAEFC,EAAiB,yCAAG,gHAAOC,EAAP,+BAAc,EAAd,SAGrBL,EAASM,IAAI,qBAAsB,CAC3CC,OAAQ,CACNC,QAASL,EACTE,KAAAA,KAN2B,uBAErBb,EAFqB,EAE7BD,KAAQC,QAFqB,kBASxBA,GATwB,2CAAH,qDAYjBiB,EAAe,yCAAG,WAAOC,GAAP,mGAAcL,EAAd,+BAAqB,EAArB,SACNL,EAASM,IAAI,eAAgB,CAClDC,OAAQ,CACNC,QAASL,EACTE,KAAAA,EACAK,MAAAA,KALyB,uBACrBnB,EADqB,EACrBA,KADqB,kBAQtBA,GARsB,2CAAH,sDAWfoB,EAAY,yCAAG,WAAO1B,GAAP,8FACHe,EAASM,IAAT,gBAAsBrB,GAAM,CACjDsB,OAAQ,CACNC,QAASL,KAHa,uBAClBZ,EADkB,EAClBA,KADkB,kBAMnBA,GANmB,2CAAH,sDASZqB,EAAmB,yCAAG,WAAO3B,GAAP,8FACVe,EAASM,IAAT,gBAAsBrB,EAAtB,YAAoC,CACzDsB,OAAQ,CACNC,QAASL,KAHoB,uBACzBZ,EADyB,EACzBA,KADyB,kBAM1BA,GAN0B,2CAAH,sDASnBD,EAAmB,yCAAG,WAAOL,GAAP,8FACVe,EAASM,IAAT,gBAAsBrB,EAAtB,YAAoC,CACzDsB,OAAQ,CACNC,QAASL,KAHoB,uBACzBZ,EADyB,EACzBA,KADyB,kBAM1BA,GAN0B,2CAAH","sources":["webpack://goit-react-hw-05-movies/./src/pages/ReviewsPage/reviewsPage.module.css?a61b","pages/ReviewsPage/ReviewsPage.jsx","shared/serveces/themoviedb.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"error\":\"reviewsPage_error__X7zD0\",\"reviewsWrapper\":\"reviewsPage_reviewsWrapper__oc3Xh\"};","import { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { getMovieReviewsById } from \"../../shared/serveces/themoviedb\";\r\n\r\nimport s from \"./reviewsPage.module.css\";\r\n\r\nconst ReviewsPage = () => {\r\n  const [state, setState] = useState({\r\n    items: [],\r\n    error: null,\r\n    loading: false,\r\n  });\r\n\r\n  const { id: StrId } = useParams();\r\n  const id = Number(StrId);\r\n\r\n  useEffect(() => {\r\n    const fetchReviewsById = async () => {\r\n      setState((prevState) => {\r\n        return { ...prevState, loading: true, error: false };\r\n      });\r\n      try {\r\n        const data = await getMovieReviewsById(id);\r\n\r\n        setState((prevState) => {\r\n          return { ...prevState, loading: false, items: data.results };\r\n        });\r\n      } catch (error) {\r\n        setState((prevState) => {\r\n          return { ...prevState, loading: false, error };\r\n        });\r\n      }\r\n    };\r\n    if (id) {\r\n      fetchReviewsById();\r\n    }\r\n  }, [id]);\r\n\r\n  const { items, error, loading } = state;\r\n\r\n  const elements = items.map(({ id, author, content }) => {\r\n    return (\r\n      <li key={id}>\r\n        <p>{`Author: ${author} `}</p>\r\n        <p>{content}</p>\r\n      </li>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div className={s.reviewsWrapper}>\r\n      <h2>Reviews</h2>\r\n      {error && (\r\n        <p className={s.error}>We are sorry, a server error occurred</p>\r\n      )}\r\n      {loading && <p className={s.error}>loading...</p>}\r\n      {elements.length > 0 ? <ul>{elements}</ul> : <p>no found Reviews</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ReviewsPage;\r\n","import axios from \"axios\";\r\nconst instance = axios.create({\r\n  baseURL: \"https://api.themoviedb.org/3/\",\r\n});\r\nconst APIkey = \"1cfe036866fd8b692888cb79d359ab5e\";\r\n\r\nexport const getTrendingMovies = async (page = 1) => {\r\n  const {\r\n    data: { results },\r\n  } = await instance.get(\"trending/movie/day\", {\r\n    params: {\r\n      api_key: APIkey,\r\n      page,\r\n    },\r\n  });\r\n  return results;\r\n};\r\n\r\nexport const getMovieByQwery = async (query, page = 1) => {\r\n  const { data } = await instance.get(\"search/movie\", {\r\n    params: {\r\n      api_key: APIkey,\r\n      page,\r\n      query,\r\n    },\r\n  });\r\n  return data;\r\n};\r\n\r\nexport const getMovieById = async (id) => {\r\n  const { data } = await instance.get(`movie/${id}`, {\r\n    params: {\r\n      api_key: APIkey,\r\n    },\r\n  });\r\n  return data;\r\n};\r\n\r\nexport const getMovieCreditsById = async (id) => {\r\n  const { data } = await instance.get(`movie/${id}/credits`, {\r\n    params: {\r\n      api_key: APIkey,\r\n    },\r\n  });\r\n  return data;\r\n};\r\n\r\nexport const getMovieReviewsById = async (id) => {\r\n  const { data } = await instance.get(`movie/${id}/reviews`, {\r\n    params: {\r\n      api_key: APIkey,\r\n    },\r\n  });\r\n  return data;\r\n};\r\n"],"names":["useState","items","error","loading","state","setState","StrId","useParams","id","Number","useEffect","fetchReviewsById","prevState","getMovieReviewsById","data","results","elements","map","author","content","className","s","length","instance","axios","baseURL","APIkey","getTrendingMovies","page","get","params","api_key","getMovieByQwery","query","getMovieById","getMovieCreditsById"],"sourceRoot":""}